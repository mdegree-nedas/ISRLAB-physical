# rcp: CORE MODULE
# rcp: auto-generated ros foreign broker file
# rcp: do not edit this file

from .broker import RedisMiddleware
from collections.abc import Callable
import json


class Freenove_4wd_smart_car:
    def __init__(self):
        self.topics = self.__Topics()
        self.commands = self.__Commands()
        self.sensors = self.__Sensors()
        self.types = self.__Types()
        self.sensors_topics = {
            self.sensors.linetracker.topic: self.sensors.linetracker.handler,
        }
        self.broker = RedisMiddleware(self.sensors_topics)

    class __Topics:
        def __init__(self):
            self.linetracker = "linetracker_topic_noros_to_ros"
            self.motion = "motion_topic_ros_to_noros"

    class __Sensors:
        def __init__(self):
            self.linetracker = self.__Linetracker()

        class __Linetracker:
            def __init__(self):
                self.topic = "linetracker_topic_noros_to_ros"
                self.time = 0.5
                self.callback = None

            def handler(self, msg):
                data = json.loads(msg["data"])
                if self.callback == None:
                    raise NotImplementedError("self.callback is not implemented")
                if not isinstance(self.callback, Callable):
                    raise RuntimeError("_callback is not callable")
                self.callback(data)

    class __Commands:
        def __init__(self):
            self.motion = self.__MotionCommands()

        class __MotionCommands:
            def __init__(self):
                self.go_forward = "go_forward"
                self.go_forward_time = 0.1

    class __Types:
        def __init__(self):
            self.twist = "twist"
