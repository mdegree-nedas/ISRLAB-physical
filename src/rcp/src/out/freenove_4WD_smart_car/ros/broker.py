# rcp: BROKER MODULE
# rcp: auto-generated ros foreign broker file
# rcp: do not edit this file

import interface
import redis
import json

SERVER_ADDR = "0.0.0.0"
SERVER_PORT = 6379
SERVER_DRDB = 0


class __RedisWrapper:
    def __init__(self, host=SERVER_ADDR, port=SERVER_PORT, db=SERVER_DRDB):
        self._redis = redis.Redis(host=host, port=port, db=db)
        self._redis_pubsub = self._redis.pubsub()

    def publish(self, topic, msg):
        return self._redis.publish(topic, msg)

    def subscribe(self, topic):
        return self._redis_pubsub.subscribe(topic)


class RedisMiddleware:
    def __init__(self):
        self._redis_wrapper = __RedisWrapper()
        self._converter = __Converter()

    def send(self, topic, command, msg_type, msg):
        if msg_type is "twist":
            msg = interface.GeometryMsgsTwist(topic, command, msg)
        else:
            raise RuntimeError("incorrect ros message type")

        msg_json = self._converter.to_json(msg)
        self._redis_wrapper.publish(topic, msg_json)


class __Converter:
    def to_json(self, msg):
        return json.dumps(msg.__dict__)
